/* Inspired by KNACSS 5.0 grid */
/* grid container */
[class*="grid-"] {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
}

/* grid childs */
[class*="grid-"] > * {
        box-sizing: border-box;
        flex: 0 0 auto;
        width: calc(100% - #{$gutter} - .01px);// @bugfix IE https://github.com/alsacreations/KNACSS/issues/133;
        min-width: 0;
        min-height: 0;
    @media all and (min-width: 960px) {
        & {
            width: calc(100% * 1 / 2 - #{$gutter} - .01px);
        }
        &.flex-item-double {
            width: calc(100% - #{$gutter} - .01px);
        }
    } // end medium screen

}



// Examples : will be compiled in CSS
@media all and (min-width: 960px) {
    @for $i from 2 through 12 {
        [class*="grid-#{$i}"] {
            @include grid(#{$i});
        }
    }
}

/* Responsive grid */
// example : .grid-4-small-2 will be 1 column (tiny) then 2 columns (small) then 4 columns
@include respond-to(small) {
    [class*="-small-4"] > * {
        width: calc(100% * 1 / 4 - #{$gutter} - .01px);
    }
    [class*="-small-4"] > .flex-item-double {
        width: calc(100% * 1 / 2 - #{$gutter} - .01px);
    }
    [class*="-small-3"] > * {
        width: calc(100% * 1 / 3 - #{$gutter} - .01px);
    }
    [class*="-small-3"] > .flex-item-double {
        width: calc(100% * 2 / 3 - #{$gutter} - .01px);
    }
    [class*="-small-2"] > * {
        width: calc(100% * 1 / 2 - #{$gutter} - .01px);
    }
    [class*="-small-2"] > .flex-item-double {
        width: calc(100% - #{$gutter} - .01px);
    }
    [class*="-small-1"] > * {
        width: calc(100% - #{$gutter} - .01px);
    }
    [class*="-small-1"] > .flex-item-double {
        width: calc(100% - #{$gutter} - .01px);
    }
}

// Examples : will be compiled in CSS

.grid-2-1 {
    @include uneven-grid(2,1);
}

.grid-1-2 {
    @include uneven-grid(1,2);
}

.grid-3-1 {
    @include uneven-grid(3,1);
}

.grid-1-3 {
    @include uneven-grid(1,3);
}

.grid-3-2 {
    @include uneven-grid(3,2);
}

.grid-2-3 {
    @include uneven-grid(2,3);
}

.grid-4-1 {
    @include uneven-grid(4,1);
}

.grid-1-4 {
    @include uneven-grid(1,4);
}

.pull {
    margin-right: auto;
}
.push {
    margin-left: auto;
}

[class*="grid-"] > div {
    margin-bottom: $gutter * 2;
}
