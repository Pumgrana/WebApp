//PREFIXES BROWSERS
@mixin crossBrowser($property, $css, $css2: "", $css3:""){
    // prefix for 3 arguments
    @if $css2 != "" and $css3 != "" {
        -webkit-#{$property} : $css, $css2;
        -ms-#{$property} : $css, $css2;
        -moz-#{$property} : $css, $css2;
        -o-#{$property} : $css, $css2;
        #{$property} : $css, $css2;
    }
    // prefix for 2 arguments
    @else if $css2 != "" and $css3 == "" {
        -webkit-#{$property} : $css, $css2;
        -ms-#{$property} : $css, $css2;
        -moz-#{$property} : $css, $css2;
        -o-#{$property} : $css, $css2;
        #{$property} : $css, $css2;
    }
    // prefix for 1 argument
    @else{
        -webkit-#{$property} : $css;
        -ms-#{$property} : $css;
        -moz-#{$property} : $css;
        -o-#{$property} : $css;
        #{$property} : $css;
    }
}

@mixin keyframes ($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

%clearfix{
    *zoom: 1;
    &:before,
    &:after{
        content: " ";
        display: table;
    }
    &:after{
        clear: both;
    }
}

//OPACITY

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);  //IE8
}


// LIST
// Place argument like :
// $listPosition => inside or outside
// $bulletStyle => name of the bullet

@mixin uList($listPosition, $bulletStyle){
    list-style-position: $listPosition;
    list-style-type: $bulletStyle;
}

//bulletPath => path to the image as url('path/to/the/image.png')
@mixin uListImage($listPosition, $bulletPath){
    list-style-position: $listPosition;
    list-style-type:none;
    &::before{
        content:$bulletPath;
    }
}
// Start here

@mixin auto-numbers($numbered-element, $sep, $counter: item, $nested-parent: false ){
    list-style:none;
    $sel: ();
    @if $nested-parent {
        $sel: append($sel, unquote($nested-parent));

        #{$nested-parent}{
            list-style: none;
            margin-left: 0;
        }
    }
    $sel: append($sel, unquote('&'), comma);

    #{$sel}{
        counter-reset: #{$counter};
        > #{$numbered-element}{
            &:before{
                counter-increment: #{$counter};
                content: if($nested-parent, counters(#{$counter}, "#{$sep} ") "#{$sep} ", counter(#{$counter}) "#{$sep} ") ;
            }
        }
    }
}

//_________________BREAKPOINT MIXINS________________
@mixin respond-to($breakpoint) {
    @if $breakpoint == "small" {
        @media (#{$break-small}) {
            @content;
        }
    }
    @else if $breakpoint == "medium" {
        @media (#{$break-medium}) {
            @content;
        }
    }
    @else if $breakpoint == "large" {
        @media (#{$break-large}) {
            @content;
        }
    }
    @else if $breakpoint == "wide" {
        @media (#{$break-wide}) {
            @content;
        }
    }
}

@mixin triangle($direction, $size, $size2, $color){
    content: '';
    display: block;
    position: absolute;
    height: 0;
    width: 0;
    @if ($direction == 'up'){
        border-bottom: $size2 solid $color;
        border-left: $size solid transparent;
        border-right: $size solid transparent;
    }
    @else if ($direction == 'down'){
        border-top: $size2 solid $color;
        border-left: $size solid transparent;
        border-right: $size solid transparent;
    }
    @else if ($direction == 'left'){
        border-top: $size solid transparent;
        border-bottom: $size2 solid transparent;
        border-right: $size solid $color;
    }
    @else if ($direction == 'right'){
        border-top: $size solid transparent;
        border-bottom: $size2 solid transparent;
        border-left: $size solid $color;
    }
    @else{
        border-bottom: $size solid $color;
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        -ms-transform: rotate(#{$direction}deg);
        -webkit-transform: rotate(#{$direction}deg);
        transform: rotate(#{$direction}deg);
    }
}
